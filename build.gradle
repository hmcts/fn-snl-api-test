plugins {
    id 'application'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'org.owasp.dependencycheck' version '6.0.2'
    id 'com.github.ben-manes.versions' version '0.33.0'
    id 'org.sonarqube' version '3.0'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

allprojects {
    sourceCompatibility = '11'
    targetCompatibility = '11'
}

configurations {

    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    acceptanceTestCompile.extendsFrom testCompile
    acceptanceTestRuntime.extendsFrom testRuntime

}

sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }

    acceptanceTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/acceptanceTest/java')
        }
        resources.srcDir file('src/acceptanceTest/resources')
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

test {
    failFast = true
}

task functional(type: Test) {
    description = "Runs functional tests"
    group = "Verification"
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test) {
    description = "Runs integration tests"
    group = "Verification"
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    failFast = true
}

task smoke(type: Test) {
    description = "Runs Smoke Tests"
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task acceptance(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the QA Acceptance tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
    classpath = sourceSets.acceptanceTest.runtimeClasspath
    include "uk/gov/hmcts/futurehearings/snl/acceptance/**"
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
    enableAssertions = true
    scanForTestClasses = true
}

checkstyle {
    maxWarnings = 0
    toolVersion = '8.29'
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
    toolVersion = "6.18.0"
    sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
    reportsDir = file("$project.buildDir/reports/pmd")
    // https://github.com/pmd/pmd/issues/876
    ruleSets = []
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "Reform :: spring-boot-template"
        property "sonar.projectKey", "uk.gov.hmcts.reform:spring-boot-template"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    }
}

// before committing a change, make sure task still works
dependencyUpdates {
    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
        def regex = /^[0-9,.v-]+$/
        return !stableKeyword && !(version ==~ regex)
    }
    rejectVersionIf { selection -> // <---- notice how the closure argument is named
        return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'config/owasp/suppressions.xml'

    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}

dependencyManagement {
    dependencies {
        dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.66'
        // CVE-2018-10237 - Unbounded memory allocation
        dependencySet(group: 'com.google.guava', version: '30.0-jre') {
            entry 'guava'
        }
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

def versions = [
        junit           : '5.7.0',
        junitPlatform   : '1.7.0',
        reformLogging   : '5.1.5',
        springBoot      : springBoot.class.package.implementationVersion,
        springfoxSwagger: '2.9.2'
]

ext.libraries = [
        junit5: [
                "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
                "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
                "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
                "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
                "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
        ]
]

ext {
    slf4jVersion = '1.7.7'
    serenityCoreVersion = '2.2.9'
    junitVersion = '4.13'
    assertJVersion = '3.8.0'
    logbackVersion = '1.2.3'
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger

    implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.5.RELEASE'
    implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.13.3'

    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.39'
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '9.0.39'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    compileOnly 'org.projectlombok:lombok:1.18.12'

    compile "ch.qos.logback:logback-classic:${logbackVersion}"

    testImplementation libraries.junit5
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testImplementation "ch.qos.logback:logback-classic:1.2.3"

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath

    functionalTestImplementation sourceSets.main.runtimeClasspath

    smokeTestImplementation sourceSets.main.runtimeClasspath

    //Acceptance Test Dependencies - START
    acceptanceTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    acceptanceTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    acceptanceTestCompile("org.springframework.boot:spring-boot-starter-test")
    acceptanceTestImplementation group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
    acceptanceTestImplementation group: 'io.rest-assured', name: 'json-path', version: '4.2.0'
    acceptanceTestImplementation 'io.rest-assured:rest-assured:4.2.0'
    acceptanceTestImplementation 'io.rest-assured:json-schema-validator:4.2.0'

    acceptanceTestImplementation "org.junit.jupiter:junit-jupiter:5.6.2"
    acceptanceTestImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.6.2'
    acceptanceTestImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.6.2'
    acceptanceTestImplementation group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.6.2'
    acceptanceTestImplementation group: 'org.junit.platform', name: 'junit-platform-suite-api', version: '1.6.2'
    acceptanceTestImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.6.2'

    acceptanceTestAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    acceptanceTestCompileOnly 'org.projectlombok:lombok:1.18.12'
    acceptanceTestImplementation "ch.qos.logback:logback-classic:1.2.3"
    acceptanceTestImplementation group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '2.27.1'
    acceptanceTestImplementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'

    acceptanceTestImplementation sourceSets.main.runtimeClasspath
    acceptanceTestImplementation sourceSets.test.runtimeClasspath
    //Acceptance Test Dependencies - FINISH

}

mainClassName = 'uk.gov.hmcts.reform.demo.Application'

bootJar {
    getArchiveFileName().set(provider {
        'spring-boot-template.jar'
    })

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
